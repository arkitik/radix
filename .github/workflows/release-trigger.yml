name: Release Trigger

on:
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
      id-token: write
      actions: write
      pull-requests: write
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
          server-id: 'central-sonatype' # Matches publishingServerId from the plugin
          server-username: CENTRAL_USERNAME
          server-password: CENTRAL_TOKEN

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install semantic-release
        run: |
          npm install -g semantic-release
          npm install -g @semantic-release/git
          npm install -g @semantic-release/changelog
          npm install -g @semantic-release/exec

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Validate Credentials
        run: |
          if [ -z "${{ secrets.CENTRAL_USERNAME }}" ] || [ -z "${{ secrets.CENTRAL_TOKEN }}" ]; then
            echo "Error: CENTRAL_USERNAME or CENTRAL_TOKEN secrets are not set or empty"
            exit 1
          fi
          echo "âœ“ Maven Central credentials validated"

      - name: Create .releaserc
        env:
          CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          CENTRAL_TOKEN: ${{ secrets.CENTRAL_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat > .releaserc << EOF
          {
            "branches": ["main", "master", "fix-release"],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/changelog",
              ["@semantic-release/exec", {
                "prepareCmd": "./.release.sh \${nextRelease.version}"
              }],
              ["@semantic-release/github", {
                "assets": [
                  {
                    "path": "release-artifacts/*.zip",
                    "label": "Distribution Archive"
                  },
                ]
              }],
              ["@semantic-release/git", {
                "assets": ["CHANGELOG.md", "pom.xml", "**/pom.xml", "README.md"],
                "message": "chore(release): \${nextRelease.version} [skip ci]\n\n\${nextRelease.notes}"
              }]
            ]
          }
          EOF

      - name: Release
        env:
          CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          CENTRAL_TOKEN: ${{ secrets.CENTRAL_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
