name: Release

on:
  push:
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
      - '.github/**'

jobs:
  compile:
    name: Compile Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Compile
        run: mvn -B clean compile

      - name: Notify on Success
        if: success()
        run: echo "✅ Code compiles successfully"

      - name: Notify on Failure
        if: failure()
        run: echo "❌ Compilation failed"
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
          server-id: 'central-sonatype' # Matches publishingServerId from the plugin
          server-username: CENTRAL_USERNAME
          server-password: CENTRAL_TOKEN

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Validate Credentials
        run: |
          if [ -z "${{ secrets.CENTRAL_USERNAME }}" ] || [ -z "${{ secrets.CENTRAL_TOKEN }}" ]; then
            echo "Error: CENTRAL_USERNAME or CENTRAL_TOKEN secrets are not set or empty"
            exit 1
          fi
          echo "✓ Maven Central credentials validated"

      - name: Build and Deploy
        env:
          CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          CENTRAL_TOKEN: ${{ secrets.CENTRAL_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          # Print environment info for debugging (without exposing secrets)
          echo "Using JDK version:" && java -version
          echo "Using Maven version:" && mvn --version

          # Run Maven with debug options for authentication issues
          mvn -DperformRelease=true \
          -Dcentral.username=${{ secrets.CENTRAL_USERNAME }} \
          -Dcentral.password=${{ secrets.CENTRAL_TOKEN }} \
          -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} \
          dokka:javadocJar gpg:sign deploy

      - name: Collect Release Artifacts
        run: |
          mkdir -p release-artifacts
          find . -type f -path "*/target/*.zip" -exec cp {} release-artifacts/ \;

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          generate_release_notes: true
          files: release-artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}